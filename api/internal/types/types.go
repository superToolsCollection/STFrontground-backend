// Code generated by goctl. DO NOT EDIT.
package types

type LoginReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResp struct {
	Id       int64  `json:"id"`
	Username string `json:"username"`
	JwtToken
}

type RegisterReq struct {
	Username string `json:"username"`
	Mobile   string `json:"mobile"`
	Password string `json:"password"`
}

type RegisterResp struct {
	Id       int64  `json:"id"`
	Username string `json:"username"`
}

type GetVerificationCodeReq struct {
	Mobile string `json:"mobile"`
}

type GetVerificationCodeResp struct {
	ResultCode int    `json:"result_code"`
	Msg        string `json:"msg"`
	VCode      string `json:"vcode"`
}

type UserNameExistReq struct {
	Username string `json:"username"`
}

type UserNameExistResp struct {
	IsExist bool `json:"is_exist"`
}

type JwtToken struct {
	AccessToken  string `json:"accessToken,omitempty"`
	AccessExpire int64  `json:"accessExpire,omitempty"`
	RefreshAfter int64  `json:"refreshAfter,omitempty"`
}

type Tag struct {
	TagId   int64  `json:"tag_id"`
	TagName string `json:"tag_name"`
}

type Tool struct {
	ToolId      int64  `json:"tool_id"`
	Name        string `json:"name"`
	Api         string `json:"api"`
	ApiDescribe string `json:"api_describe"`
	Picture     string `json:"picture"`
	Tags        []*Tag `json:"tags"`
}

type ToolsListReq struct {
	Page     int64 `json:"page"`
	PageSize int64 `json:"page_size"`
}

type ToolsListResp struct {
	Tools []*Tool `json:"tools"`
}

type ToolsListByTagNameReq struct {
	Page     int64  `json:"page"`
	PageSize int64  `json:"page_size"`
	TagName  string `json:"tag_name"`
}

type ToolsListByTagNameResp struct {
	Tools []*Tool `json:"tools"`
}

type MorseReq struct {
	Str string `json:"str"`
}

type MorseResp struct {
	MorseStr string `json:"morse_str"`
}

type QrCodeReq struct {
	Str string `json:"str"`
}

type QrCodeResp struct {
	QrCodeStr string `json:"qrcode_str"`
}

type Rgb2HexReq struct {
	Str string `json:"str"`
}

type Rgb2HexResp struct {
	Rgb2HexStr string `json:"rgb2hex_str"`
}
